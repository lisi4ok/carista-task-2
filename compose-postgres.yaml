services:
  postgres:
    container_name: postgres
    image: postgres:alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    networks:
      - network

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      PGADMIN_LISTEN_PORT: ${PGADMIN_PORT}
    ports:
      - "${PGADMIN_PORT}:${PGADMIN_PORT}"
    volumes:
      - ./pgadmin-servers.json:/pgadmin4/servers.json
    depends_on:
      - postgres
    networks:
      - network

  redis:
    container_name: redis
    image: redis:alpine
    restart: unless-stopped
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes:
      - ./data/redis:/data/redis
    networks:
      - network

  queue-worker:
    container_name: queue-worker
    image: php:cli-alpine
    working_dir: /app
    command: php /app/artisan queue:work --queue=default --sleep=3 --tries=3 --max-time=3600
    restart: always
    volumes:
      - ./:/app
    networks:
      - network

  schedule-worker:
    container_name: schedule-worker
    image: php:cli-alpine
    working_dir: /app
    command: php /app/artisan schedule:work
    restart: always
    volumes:
      - ./:/app
    networks:
      - network


networks:
  network:
